{"version":3,"sources":["utils/dataUtils.js","components/PayInfoChart.js","App.js","reportWebVitals.js","index.js"],"names":["colors","Eat_my_dust","我爸說對就隊","我們很強對不隊","車尾燈研究大隊","renderCustomizedLabel","props","x","y","width","value","fill","textAnchor","dominantBaseline","fontSize","PayInfoChart","data","isLoading","useResizeDetector","ref","console","log","className","ResponsiveContainer","height","BarChart","layout","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","type","tick","stroke","strokeWidth","YAxis","dataKey","Bar","barSize","map","entry","index","Cell","name","LabelList","content","App","useQuery","a","axios","get","res","refetchInterval","status","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"uSAAaA,EAAS,CACpBC,YAAa,OACbC,uCAAQ,UACRC,6CAAS,UACTC,6CAAS,W,QCULC,EAAwB,SAACC,GAC7B,IAAQC,EAAuBD,EAAvBC,EAAGC,EAAoBF,EAApBE,EAAGC,EAAiBH,EAAjBG,MAAOC,EAAUJ,EAAVI,MAGrB,OACE,4BACE,sBACEH,EAAGA,EAAIE,EAAQ,GACfD,EAAGA,EANM,GAOTG,KAAK,UACLC,WAAW,SACXC,iBAAiB,SACjBC,SAAS,QANX,kCAQWJ,QA6CFK,EAvCM,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UAC5B,EAAuBC,cAAfT,EAAR,EAAQA,MAAOU,EAAf,EAAeA,IAGf,OAFAC,QAAQC,IAAI,OAAQL,GAEZC,EA+BN,wBA9BA,sBAAKK,UAAU,qBAAqBH,IAAKA,EAAzC,UACE,qBAAKG,UAAU,cAAf,kDACA,cAACC,EAAA,EAAD,CAAqBd,MAAOA,EAAOe,OAAQ,IAA3C,SACE,eAACC,EAAA,EAAD,CACET,KAAMA,EACNU,OAAO,WACPC,OAAQ,CACNC,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,IAPZ,UAUE,cAACC,EAAA,EAAD,CAAeC,gBAAgB,QAC/B,cAACC,EAAA,EAAD,CAAOC,KAAK,SAASC,KAAM,CAAEC,OAAQ,OAAQC,YAAa,KAC1D,cAACC,EAAA,EAAD,CACEC,QAAQ,OACRL,KAAK,WACLC,KAAM,CAAEC,OAAQ,OAAQC,YAAa,EAAGxB,SAAU,UAEpD,eAAC2B,EAAA,EAAD,CAAKD,QAAQ,SAAS7B,KAAK,UAAU+B,QAAS,GAA9C,UACG1B,EAAK2B,KAAI,SAACC,EAAOC,GAAR,OACR,cAACC,EAAA,EAAD,CAA4BnC,KAAMX,EAAO4C,EAAMG,OAA/C,eAAmBF,OAErB,cAACG,EAAA,EAAD,CAAWR,QAAQ,SAASS,QAAS5C,gBC3BlC6C,MAhCf,WACE,MAAyBC,mBACvB,QAD+B,sBAE/B,4BAAAC,EAAA,sEACoBC,IAAMC,IACtB,oHAFJ,cACQC,EADR,yBAISA,EAAIvC,MAJb,2CAMA,CAEEwC,gBAAiB,MAVbC,EAAR,EAAQA,OAAQzC,EAAhB,EAAgBA,KAchB,OACE,qBAAKM,UAAU,WAAf,SACE,qBAAKA,UAAU,OAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,cAAf,wDACA,qBAAKA,UAAU,UAAf,SACE,cAAC,EAAD,CACEN,KAAMA,GAAQA,EAAKA,KACnBC,UAAsB,YAAXwC,cCfVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCRQ,G,OAAc,IAAIC,eAExBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,sBAAD,CAAqBC,OAAQL,EAA7B,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,SAM1BhB,M","file":"static/js/main.9c1c37f9.chunk.js","sourcesContent":["export const colors = {\n  Eat_my_dust: \"#fff\",\n  我爸說對就隊: \"#222222\",\n  我們很強對不隊: \"#4174ed\",\n  車尾燈研究大隊: \"#F251A4\",\n};\n","import React from \"react\";\nimport { useResizeDetector } from \"react-resize-detector\";\nimport {\n  BarChart,\n  Bar,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  LabelList,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { colors } from \"../utils/dataUtils\";\n\nconst renderCustomizedLabel = (props) => {\n  const { x, y, width, value } = props;\n  const radius = 18;\n\n  return (\n    <g>\n      <text\n        x={x + width - 40}\n        y={y + radius}\n        fill=\"#ebc21e\"\n        textAnchor=\"middle\"\n        dominantBaseline=\"middle\"\n        fontSize=\"1.3em\"\n      >\n        {`每人: $${value}`}\n      </text>\n    </g>\n  );\n};\n\nconst PayInfoChart = ({ data, isLoading }) => {\n  const { width, ref } = useResizeDetector();\n  console.log(\"data\", data);\n\n  return !isLoading ? (\n    <div className=\"rechart-wapper-div\" ref={ref}>\n      <div className=\"chart_title\">押注獲勝金額</div>\n      <ResponsiveContainer width={width} height={300}>\n        <BarChart\n          data={data}\n          layout=\"vertical\"\n          margin={{\n            top: 5,\n            right: 10,\n            left: 80,\n            bottom: 10,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis type=\"number\" tick={{ stroke: \"#fff\", strokeWidth: 1 }} />\n          <YAxis\n            dataKey=\"name\"\n            type=\"category\"\n            tick={{ stroke: \"#fff\", strokeWidth: 1, fontSize: \"18px\" }}\n          />\n          <Bar dataKey=\"winPay\" fill=\"#8884d8\" barSize={30}>\n            {data.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={colors[entry.name]} />\n            ))}\n            <LabelList dataKey=\"winPay\" content={renderCustomizedLabel} />\n          </Bar>\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  ) : (\n    <div></div>\n  );\n};\n\nexport default PayInfoChart;\n","import React from \"react\";\nimport axios from \"axios\";\nimport { useQuery } from \"react-query\";\nimport PayInfoChart from \"./components/PayInfoChart\";\nfunction App() {\n  const { status, data } = useQuery(\n    \"todos\",\n    async () => {\n      const res = await axios.get(\n        \"https://script.google.com/macros/s/AKfycbwkYaLVJNPhtLzfdiRzIQaROm6_g4b4FkR_vWLsm6gLuP39ZTBY7BrBvishJaYSCqqC/exec\"\n      );\n      return res.data;\n    },\n    {\n      // Refetch the data every second\n      refetchInterval: 30000,\n    }\n  );\n\n  return (\n    <div className=\"app_main\">\n      <div className=\"body\">\n        <div className=\"view mt-20 mx-20\">\n          <div className=\"title mt-20\">馬利歐賽車 TUTK 盃</div>\n          <div className=\"content\">\n            <PayInfoChart\n              data={data && data.data}\n              isLoading={status === \"loading\"}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./scss/style.scss\";\n\n// import { ReactQueryDevtools } from \"react-query/devtools\";\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}